FROM golang:1.10.2 AS confd-build

ARG CONFD_VERSION=v0.16.0
ARG CGO_ENABLED=0

WORKDIR $GOPATH/src/github.com/kelseyhightower

RUN git clone https://github.com/kelseyhightower/confd.git confd -c advice.detachedHead=false

WORKDIR $GOPATH/src/github.com/kelseyhightower/confd

RUN git checkout ${CONFD_VERSION} && make && make install

FROM debian:bookworm AS runtime

ENV DEBIAN_FRONTEND noninteractiveâˆ‚
ENV TERM xterm

COPY src/01_nodoc /etc/dpkg/dpkg.cfg.d/
COPY src/01_buildconfig /etc/apt/apt.conf.d/

# Install ops/sre related packages.
# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
		avahi-daemon \
		ca-certificates \
		curl \
		htop \
		ifupdown \
		jq \
		nano \
		net-tools \
		procmail \
		strace \
		vim \
		wget \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

# And configure them.
COPY src/htoprc /root/.config/htop/
COPY src/mdns.allow /etc/mdns.allow

# === Confd part ===
# May be removed once we switch to a different configuration mechanism.

# Directory where rendered environment files are store.
RUN mkdir /balena

# Set an entry point that runs confd if necessary before executing the main process.
ENTRYPOINT ["/usr/bin/confd-entry.sh"]
COPY src/confd-entry.sh /usr/bin/confd-entry.sh

# balenaMachine automatic configuration script.
COPY src/configure-balena.sh /usr/bin/configure-balena.sh

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ARG TARGETARCH

# renovate: datasource=node-version depName=node
ARG NODE_VERSION=21.7.0
# renovate: datasource=npm depName=npm
ARG NPM_VERSION=10.5.0

RUN if [ "${TARGETARCH}" = "amd64" ] ; \
	then \
		NODE_URL="https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" ; \
	else \
		NODE_URL="https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-${TARGETARCH}.tar.gz" ; \
	fi && \
	curl -fsSL "${NODE_URL}" | tar xz -C /usr/local --strip-components=1 --no-same-owner \
	&& npm install -g npm@"$NPM_VERSION" \
	&& rm -rf /root/.npm/_cacache \
	&& npm cache clear --force \
	&& rm -rf /tmp/*

# Confd binary installation.
COPY --from=confd-build /usr/local/bin/confd /usr/local/bin/confd
